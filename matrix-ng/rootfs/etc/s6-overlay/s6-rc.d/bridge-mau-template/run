#!/command/with-contenv bashio
# shellcheck shell=bash
mautrixname="{{ mautrix_name }}"
bashio::log.info "bridge-$mautrixname is waiting for Matrix at http://localhost:8008"
until curl -s http://localhost:8008 > /dev/null; do sleep 1; done
bashio::log.info "bridge-$mautrixname is connected to Matrix.."

config_file="/data/bridge-$mautrixname-config.yaml"
default_config_file="/opt/mautrix-$mautrixname/example-config.yaml"
[[ ! -f "$config_file" ]] && cp "$default_config_file" "$config_file" && echo "Copied default config file to $config_file"

yq eval '.homeserver.address = "'$(bashio::config 'hs_url')'" |
          .homeserver.domain = "'$(bashio::config 'server_name')'" |
          .appservice.database.uri = "postgresql://postgres:homeassistant@localhost:5432/bridge_'"$mautrixname"'?sslmode=disable" |
          .bridge.permissions."*" = "relay" |
          .bridge.permissions."'"$(bashio::config 'server_name')"'" = "user" |
          .bridge.permissions."@testuser:'"$(bashio::config 'server_name')"'" = "admin"' -i "$config_file"

if [[ ! -f /data/bridge-$mautrixname-registration.yaml ]]; then
	/usr/bin/mautrix-$mautrixname -g -c $config_file -r /data/bridge-$mautrixname-registration.yaml
    sleep 3
    echo "Generated /data/bridge-$mautrixname-registration.yaml and restarting addon"
	bashio::addon.restart
fi

cd /data
# [[ -z "$GID" ]] && GID="$UID"
# chown -R $UID:$GID /data
# # /opt/mautrix-$mautrixname is read-only, disable file logging if it's pointing there.
# if [[ "$(yq e '.logging.directory' $config_file)" == "./logs" ]]; then
# 	yq -I4 e -i '.logging.file_name_format = ""' $config_file
# fi
# exec su-exec $UID:$GID /usr/bin/mautrix-whatsapp -c "$config_file"
/usr/bin/mautrix-$mautrixname -c /data/bridge-$mautrixname-config.yaml
